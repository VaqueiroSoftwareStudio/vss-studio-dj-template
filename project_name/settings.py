"""
Django settings for {{ project_name }} project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

RUNNING_PROD_SERVER = True if os.getenv('SETTINGS_MODE', '') == 'prod' else False

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i3$qhoe$+nq*n6*$*!@a94q1i7kh8phju$!6d7+umsg8c1nns#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False if RUNNING_PROD_SERVER else True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.humanize',
    # VSS Dependencies
    'django_quill',
    # VSS Apps
    'vss',
    'vss.apps.dashboard',
    'vss.apps.accounts',
    'vss.apps.blog',
    'vss.apps.components',
    'vss.apps.data',
    'vss_studio',
    'vss_studio.apps.setup',
    'vss_studio.apps.catalog',
    'vss_studio.apps.offers',
    'vss_studio.apps.customers',
    'vss_studio.apps.orders',
    'vss_studio.apps.checkout',
    'vss_studio.apps.website',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'vss.middleware.DisableClientSideCachingMiddleware',
]

ROOT_URLCONF = '{{ project_name }}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
                'vss.context_processors.vss',
                'vss_studio.context_processors.vss_studio',
            ],
        },
    },
]

WSGI_APPLICATION = '{{ project_name }}.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if RUNNING_PROD_SERVER:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': '<< DATABASE_NAME >>',
            'USER': '<< DATABASE_USER >>',
            'PASSWORD': '<< DATABASE_PASS >>',
            'HOST': '<< DATABASE_HOST >>',
            'PORT': 3306,
            'OPTIONS': {
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
                "charset": "utf8mb4",
            },
            "TEST": {
                "CHARSET": "utf8mb4",
                "COLLATION": "utf8mb4_unicode_ci",
            },
        }
    }

else:

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

from django.utils.translation import gettext_lazy as _

LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANGUAGES = [
    ('es', _('Español')),
    #('en', _('Inglés')),
]


LOCALE_PATHS = os.path.join(BASE_DIR, 'locale'),

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_ROOT = os.path.dirname(BASE_DIR) + '/public/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SITE_ID = 1

# Email
DEFAULT_FROM_EMAIL = '<< SITE_EMAIL_ADDRESS >>' # SiteName <web@example.com>
EMAIL_HOST = '<< SITE_EMAIL_HOST >>' # mail.example.com
EMAIL_PORT = 587
EMAIL_HOST_PASSWORD = '<< SITE_EMAIL_PASS >>'
EMAIL_HOST_USER = '<< SITE_EMAIL_ADDRESS >>'
EMAIL_SUBJECT_PREFIX = ''
EMAIL_USE_TLS = True
SERVER_EMAIL = '<< SITE_SERVER_MAIL >>' # web@example.com

if not RUNNING_PROD_SERVER:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# X_FRAME_OPTIONS
X_FRAME_OPTIONS = 'SAMEORIGIN'

XS_SHARING_ALLOWED_METHODS = ['POST','GET','OPTIONS', 'PUT', 'DELETE']

# SSL
if RUNNING_PROD_SERVER:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True

# Django management
ADMINS = (
    ('VSS', 'contacto@vaqueiro.com.mx'),
)

MANAGERS = ADMINS

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'cache_table',
    }
}

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'secondary',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}

# Auth
AUTH_USER_MODEL = 'accounts.User'
LOGIN_REDIRECT_URL = '/dashboard/'
LOGOUT_REDIRECT_URL = '/accounts/login/'
LOGIN_URL = '/accounts/login/'

QUILL_CONFIGS = {
    'default':{
        'theme': 'snow',
        'modules': {
            'syntax': True,
            'toolbar': [
                [{'header': []}],
                ['bold', 'italic', 'underline', 'strike','blockquote',],
                [{'list': 'ordered'}, {'list': 'bullet'},],
                [{'align':[]}],
                ['link', 'image', 'video'],
                ['code-block'],
                ['clean'],
            ]
        },
        # quill-image-compress
        'imageCompressor': {
            "quality": 0.8,
            "maxWidth": 2000,
            "maxHeight": 2000,
            "imageType": "image/jpeg",
            "debug": False,
            "suppressErrorLogging": True,
        },
        # quill-resize
        'resize': {
            "showSize": True,
            "locale": {},
        },
    }
}

# Requisitos para VSS Studio

VSS_DASHBOARD_REGISTRY = [
    {
        'group_name': _('Estudio'),
        'admin_data' : [
            'vss_studio.apps.catalog.vss_admin.ServiceAdmin',
            'vss_studio.apps.setup.vss_admin.AvailabilityAdmin',
            'vss_studio.apps.setup.vss_admin.COBAdmin',
            'vss.apps.components.vss_admin.TextPageAdmin',
            'vss.apps.data.vss_admin.SiteContactDataAdmin',
            'vss.apps.data.vss_admin.SiteSocialNetworkAdmin',
        ]
    },
    {
        'group_name': _('Ecommerce'),
        'admin_data' : [
            'vss_studio.apps.orders.vss_admin.OrderAdmin',
            'vss_studio.apps.orders.vss_admin.OrderTransactionAdmin',
            'vss_studio.apps.customers.vss_admin.CustomerAdmin',
        ]
    },
    {
        'group_name': _('Marketing'),
        'admin_data' : [
            'vss_studio.apps.offers.vss_admin.OfferAdmin',
            'vss_studio.apps.offers.vss_admin.CouponAdmin',
        ]
    },
    {
        'group_name': _('Blog'),
        'admin_data' : [
            'vss.apps.blog.vss_admin.ArticleAdmin',
            'vss.apps.blog.vss_admin.CategoryAdmin',
            'vss.apps.blog.vss_admin.ArticleCommentAdmin',
        ]
    },
    {
        'group_name': _('Web'),
        'admin_data' : [
            'vss.apps.components.vss_admin.BannerAdmin',
            'vss.apps.components.vss_admin.FAQAdmin',
            'vss.apps.components.vss_admin.TestimonialAdmin',
            'vss_studio.apps.website.vss_admin.SiteHeadersAdmin',
            'vss.apps.data.vss_admin.SiteBrandingDataAdmin',
            'vss.apps.data.vss_admin.SiteSnippetsAdmin',
        ]
    },
    {
        'group_name': _('Configuración'),
        'admin_data' : [
            'vss_studio.apps.setup.vss_admin.SitePaymentSetupAdmin',
            'vss_studio.apps.setup.vss_admin.SiteStoreSetupAdmin',
            'vss.apps.data.vss_admin.SiteGoogleServicesAdmin',
            'vss.apps.accounts.vss_admin.UserAdmin',
        ]
    },
]

VSS_DASHBOARD_INDEX = {
    # Muestra un enlace a model.create.view si:
    #     vssadmin.enable_create = True
    #     vssadmin.sitedata_model != True
    'quick_links' : [
        'vss.apps.blog.vss_admin.ArticleAdmin',
        'vss_studio.apps.catalog.vss_admin.ServiceAdmin',
        'vss_studio.apps.orders.vss_admin.OrderTransactionAdmin',
        'vss_studio.apps.offers.vss_admin.OfferAdmin',
        'vss_studio.apps.offers.vss_admin.CouponAdmin',
    ],
    # Muestra los 5 elementos mas recientes en una lista
    'quick_view' : [
        'vss_studio.apps.orders.vss_admin.OrderAdmin',
        'vss.apps.blog.vss_admin.ArticleCommentAdmin',       
    ]
}

VSS_DASHBOARD_BANNER = 'vss_studio/img/vss_banner.png'

PAYPAL_SANDBOX_CLIENT_ID = '<<PAYPAL_SANDBOX_CLIENT_ID>>'